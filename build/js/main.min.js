!function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(t){return e[t]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s="./source/js/main.js")}({"./source/js/dragAndDrop.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dragStart", function() { return dragStart; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "allowDrop", function() { return allowDrop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "drop", function() { return drop; });\n//===================== Drag & Drop\r\nconst dragStart = (event) => {\r\n    event.dataTransfer.setData("text/plain", event.target.id);\r\n}\r\nconst allowDrop = (event) => {\r\n    event.preventDefault();\r\n    alert(222);\r\n    //event.currentTarget.style.background = \'#7f8082\';\r\n}\r\nconst drop = (event) => {\r\n    event.preventDefault();\r\n    const data = event.dataTransfer.getData("text/plain");\r\n    const element = document.querySelector(\'li\');\r\n    //event.currentTarget.style.background = \'white\'\r\n    try {\r\n        event.target.appendChild(element);\r\n    } catch (error) {\r\n        console.warn("you can\'t move the item to the same place")\r\n    }\r\n}\n\n//# sourceURL=webpack:///./source/js/dragAndDrop.js?')},"./source/js/main.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dragAndDrop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dragAndDrop */ "./source/js/dragAndDrop.js");\n\r\n\r\n\r\n// Remove and complete icons in SVG format\r\nconst removeSVG = \'<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 22 22" style="enable-background:new 0 0 22 22;" xml:space="preserve"><g><g><path class="fill" d="M16.1,3.6h-1.9V3.3c0-1.3-1-2.3-2.3-2.3h-1.7C8.9,1,7.8,2,7.8,3.3v0.2H5.9c-1.3,0-2.3,1-2.3,2.3v1.3c0,0.5,0.4,0.9,0.9,1v10.5c0,1.3,1,2.3,2.3,2.3h8.5c1.3,0,2.3-1,2.3-2.3V8.2c0.5-0.1,0.9-0.5,0.9-1V5.9C18.4,4.6,17.4,3.6,16.1,3.6z M9.1,3.3c0-0.6,0.5-1.1,1.1-1.1h1.7c0.6,0,1.1,0.5,1.1,1.1v0.2H9.1V3.3z M16.3,18.7c0,0.6-0.5,1.1-1.1,1.1H6.7c-0.6,0-1.1-0.5-1.1-1.1V8.2h10.6L16.3,18.7L16.3,18.7z M17.2,7H4.8V5.9c0-0.6,0.5-1.1,1.1-1.1h10.2c0.6,0,1.1,0.5,1.1,1.1V7z"/></g><g><g><path class="fill" d="M11,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8c0-0.4,0.3-0.6,0.6-0.6s0.6,0.3,0.6,0.6v6.8C11.6,17.7,11.4,18,11,18z"/></g><g><path class="fill" d="M8,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8C7.4,10.2,7.7,10,8,10c0.4,0,0.6,0.3,0.6,0.6v6.8C8.7,17.7,8.4,18,8,18z"/></g><g><path class="fill" d="M14,18c-0.4,0-0.6-0.3-0.6-0.6v-6.8c0-0.4,0.3-0.6,0.6-0.6c0.4,0,0.6,0.3,0.6,0.6v6.8C14.6,17.7,14.3,18,14,18z"/></g></g></g></svg>\';\r\nconst completeSVG = \'<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 22 22" style="enable-background:new 0 0 22 22;" xml:space="preserve"><rect y="0" class="noFill" width="22" height="22"/><g><path class="fill" d="M9.7,14.4L9.7,14.4c-0.2,0-0.4-0.1-0.5-0.2l-2.7-2.7c-0.3-0.3-0.3-0.8,0-1.1s0.8-0.3,1.1,0l2.1,2.1l4.8-4.8c0.3-0.3,0.8-0.3,1.1,0s0.3,0.8,0,1.1l-5.3,5.3C10.1,14.3,9.9,14.4,9.7,14.4z"/></g></svg>\';\r\n\r\n\r\n\r\n// User clicked on the add button\r\n// If there is any text inside the item field, add that text to the todo list\r\ndocument.getElementById(\'add\').addEventListener(\'click\', function() {\r\n    let value = document.getElementById(\'item\').value;\r\n    if (value) {\r\n        addItemTodo(value);\r\n        document.getElementById(\'item\').value = \'\';\r\n    }\r\n});\r\n\r\ndocument.getElementById(\'item\').addEventListener(\'keydown\', function(event) {\r\n    let value = event.currentTarget.value;\r\n\r\n    if ((event.code === \'Enter\' || event.code === \'NumpadEnter\') && value) {\r\n        addItemTodo(value);\r\n        document.getElementById(\'item\').value = \'\';\r\n    }\r\n});\r\n\r\n\r\nconst removeItem = (event) => {\r\n    let item = event.currentTarget.parentNode.parentNode;\r\n    let parent = item.parentNode;\r\n\r\n    parent.removeChild(item);\r\n}\r\n\r\nconst completeItem = (event) => {\r\n    let item = event.currentTarget.parentNode.parentNode;\r\n    let parent = item.parentNode;\r\n    let id = parent.id;\r\n    let value = item.innerText;\r\n\r\n    //===== Check if the item should be added to the completed list or to re-added to the todo list\r\n    let target = (id === \'todo\') ? document.getElementById(\'completed\') : document.getElementById(\'todo\');\r\n\r\n    parent.removeChild(item);\r\n    target.insertBefore(item, target.childNodes[0]);\r\n}\r\n\r\n//===== Adds a new item to the to do list\r\n\r\nconst addItemTodo = (text) => {\r\n\r\n    let list = document.getElementById(\'todo\');\r\n    let item = document.createElement(\'li\');\r\n    item.setAttribute("draggable", "true");\r\n    item.innerHTML = text;\r\n\r\n    let buttons = document.createElement(\'div\');\r\n    buttons.classList.add(\'buttons\');\r\n\r\n    let remove = document.createElement(\'button\');\r\n    remove.classList.add(\'remove\');\r\n    remove.innerHTML = removeSVG;\r\n\r\n    let complete = document.createElement(\'button\');\r\n    complete.classList.add(\'complete\');\r\n    complete.innerHTML = completeSVG;\r\n\r\n    //===== Add click event for removing & compliting items\r\n    remove.addEventListener(\'click\', removeItem);\r\n    complete.addEventListener(\'click\', completeItem);\r\n\r\n    //===== appendChild\r\n\r\n    buttons.appendChild(remove);\r\n    buttons.appendChild(complete);\r\n    item.appendChild(buttons);\r\n    list.insertBefore(item, list.childNodes[0]);\r\n}\n\n//# sourceURL=webpack:///./source/js/main.js?')}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
